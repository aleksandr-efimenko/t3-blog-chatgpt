import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { api } from "~/utils/api";
import { useCallback, useEffect, useState } from "react";
import Button from "~/components/Button";
import { Router } from "next/router";
import PostElement from "~/components/PostElement";
import "easymde/dist/easymde.min.css";
import OpenAiSettings, {
  OpenAiSettingsProps,
} from "~/components/OpenAiSettings";
import ArticleGenForm from "~/components/ArticleGenForm";

const CreatePost: NextPage = () => {
  const [settings, setSettings] = useState<OpenAiSettingsProps>({
    prompt: "Write a blog post with the following title:",
    description: "",
    keywords: [],
    model: "text-davinci-001",
    temperature: 0.8,
    max_tokens: 200,
    format: "",
    finalPrompt: "",
  });
  const [title, setTitle] = useState("");
  const [content, setContent] = useState("");
  const [openAIFetchingStatus, setOpenAIFetchingStatus] = useState<
    "idle" | "pending" | "fulfilled" | "rejected"
  >("idle");
  const response = api.openAi.generateCompletion.useMutation({
    onMutate: () => {
      console.log("pending");
      setOpenAIFetchingStatus("pending");
    },
    onError: (error) => {
      console.log(error);
      setOpenAIFetchingStatus("rejected");
    },
    onSuccess: (data) => {
      console.log("success");
      if (!data.response) return;
      const text = data.response?.choices?.[0]?.text || "No response";
      console.log(data.response);
      setContent(text);
      setOpenAIFetchingStatus("fulfilled");
    },
  });

  const generatePost = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if(!title) return;
    if (openAIFetchingStatus === "pending") return;
    setContent("");

    await response.mutateAsync({ ...settings, prompt: settings.finalPrompt });
  };

  useEffect(() => {
    let finalPrompt = `${settings.prompt} ${title}`;
    if (settings.description) {
      finalPrompt += `\n\n${settings.description}`;
    }
    if (settings.keywords.length > 0) {
      finalPrompt += `\n\nUse keywords: ${settings.keywords.join(", ")}`;
    }
    if (settings.format) {
      finalPrompt += `\n\nUse format: ${settings.format}`;
    }

    setSettings((prev) => ({ ...prev, finalPrompt }));
  }, [
    settings.prompt,
    settings.description,
    settings.keywords,
    settings.format,
    title,
  ]);


  const publishPost = api.posts.createPost.useMutation();
  const savePost = () => {
    if (!title || !content) return;
    publishPost.mutate({
      title: title,
      content: content,
      published: true,
    });
    setTitle("");
    setContent("");
  };

  return (
    <>
      <Head>
        <title>Create post</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-full flex-col items-center justify-center">
        <div className="container flex flex-col items-center justify-center gap-3  ">
          <h1 className="text-2xl tracking-tight text-white">Create post</h1>
          <div className=" grid w-full grid-cols-3 gap-10">
            <div className="">
              <OpenAiSettings settings={settings} setSettings={setSettings} />
            </div>
            
            <ArticleGenForm
              title={title}
              setTitle={setTitle}
              content={content}
              setContent={setContent}
              generatePost={generatePost}
              openAIFetchingStatus={openAIFetchingStatus}
            />
            <div className="flex w-full flex-1 flex-col justify-between">
              <PostElement post={{ title: title, content: content }} />
              <Button onClick={savePost}>Post</Button>
            </div>
          </div>
          <div className="text-left">
            <h2 className="text-white text-2xl mt-5">Final prompt:</h2>
                <p className="text-white">{settings.finalPrompt}</p>
          </div>
        </div>
      </main>
    </>
  );
};

export default CreatePost;
