import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { api } from "~/utils/api";
import Container from "~/components/Container";
import PostList from "~/components/PostList";
import AnimatedSpinner from "~/components/AnimatedSpinner";
import PostElement from "~/components/PostElement";
import { Post } from "@prisma/client";
import PostButtonsBar from "~/components/PostButtonsBar";

const Home: NextPage = () => {
  // const posts = api.posts.getAllPosts.useQuery().data;

  // return (
  //   <>
  //     <Head>
  //       <title>Create T3 App</title>
  //       <meta name="description" content="Generated by create-t3-app" />
  //       <link rel="icon" href="/favicon.ico" />
  //     </Head>
  //     {posts && (
  //       <Container>
  //         <div className="grid gap-10 md:grid-cols-2 lg:gap-10 ">
  //           {posts.slice(0, 2).map((post) => (
  //             <PostList
  //               key={post.id}
  //               post={post}
  //               aspect="landscape"
  //               preloadImage={true}
  //             />
  //           ))}
  //         </div>
  //         <div className="mt-10 grid gap-10 md:grid-cols-2 lg:gap-10 xl:grid-cols-3 ">
  //           {posts.slice(2, 14).map((post) => (
  //             <PostList key={post.id} post={post} aspect="square" />
  //           ))}
  //         </div>
  //         <div className="mt-10 flex justify-center">
  //           <Link
  //             href="/archive"
  //             className="relative inline-flex items-center gap-1 rounded-md border border-gray-300 bg-white px-3 py-2 pl-4 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-20 disabled:pointer-events-none disabled:opacity-40 dark:border-gray-500 dark:bg-gray-800 dark:text-gray-300"
  //           >
  //             <span>View all Posts</span>
  //           </Link>
  //         </div>
  //       </Container>
  //     )}
  //   </>
  // );

  const { data, error } = api.posts.getAllPosts.useQuery();
  if (error) {
    return <div>Error while fetching posts: {error.message}</div>;
  }

  if (!data) {
    return (
      <div className="flex flex-col items-center justify-center gap-8 text-white">
        <AnimatedSpinner />
      </div>
    );
  }

  return (
    <div className="flex flex-col items-center justify-center gap-8 p-8">
      {data.map((post: Post) => (
        <div key={post.id} className=" border  border-x-gray-200 p-4 w-full">
          <PostElement key={post.id} post={post} />
          {/* <PostButtonsBar postId={post.id} /> */}
        </div>
      ))}
    </div>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
